{"ts":1360810608000,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1360810950187,"patch":[[{"diffs":[[1,"var Castle = function(_id) {\n   this.timeCreated = new Date();\n   this.lastUpdated = 0;\n   this.dt = 0;\n   this.id = _id;\n   this.level = 0;\n};\n\n\nCastle.prototype.init = function() {\n   this.level = 0;\n};\n\n\nCastle.prototype.view = function(io) {\n   io.sockets.emit(\"castleView\",this.timeCreated,this.dt,this.id,this.level);\n}"]],"start1":0,"start2":0,"length1":0,"length2":325}]],"length":325,"saved":false}
{"ts":1360811021112,"patch":[[{"diffs":[[0,".level = 0;\n};\n\n"],[-1,"\n"],[0,"Castle.prototype"]],"start1":129,"start2":129,"length1":33,"length2":32},{"diffs":[[0," 0;\n};\n\n"],[-1,"\n"],[0,"Castle.p"]],"start1":197,"start2":197,"length1":17,"length2":16},{"diffs":[[0,"evel);\n}"],[1,";"]],"start1":315,"start2":315,"length1":8,"length2":9}]],"length":324,"saved":false}
{"ts":1360812113375,"patch":[[{"diffs":[[0,"var "],[-1,"Castle = function(_id) {\n   this.timeCreated = new Date();\n   this.lastUpdated = 0;\n   this.dt = 0;\n   this.id = _id;\n   this.level = 0"],[1,"app = require('http').createServer(handler);\nvar fs = require('fs');\nvar io = require('socket.io').listen(app);\nvar port = process.env.PORT || 5000;\napp.listen(port);\n\n// websockets not supported yet\nio.configure(function() {\n   io.set(\"transports\", [\"xhr-polling\"]);\n   io.set(\"polling duration\", 10);\n});\n\nfunction handler(req, res) {\n   fs.readFile(__dirname + '/castle.html',\n\n   function(err, data) {\n      if (err) {\n         res.writeHead(500);\n         return res.end('Error loading index.html');\n      }\n\n      res.writeHead(200);\n      res.end(data);\n   });\n}\n\nvar Castle = function(_id) {\n   this.timeCreated = new Date();\n   this.lastUpdated = 0;\n   this.dt = 0;\n   this.id = _id;\n   this.level = 0;\n   \n   this.knightsHall = false;\n   this.canBuildTrainingGround = false;\n   this.canBuildArchery = false;\n   this.canBuildStables = false;\n   this.canBuildStoreHouse = false"],[0,";\n};"]],"start1":0,"start2":0,"length1":143,"length2":893},{"diffs":[[0,"eView\",this."],[-1,"t"],[1,"T"],[0,"imeCreated,t"]],"start1":1019,"start2":1019,"length1":25,"length2":25},{"diffs":[[0,"ted,"],[1," "],[0,"this."],[-1,"dt,"],[1,"id, "],[0,"this."],[-1,"id,"],[1,"dt, "],[0,"this"]],"start1":1039,"start2":1039,"length1":24,"length2":27},{"diffs":[[0,"level);\n"],[-1,"};"],[1,"   \n};\n\n\n"]],"start1":1067,"start2":1067,"length1":10,"length2":17}]],"length":1084,"saved":false}
{"ts":1360812684059,"patch":[[{"diffs":[[0," });\n}\n\n"],[1,"\n\n"],[0,"var Cast"]],"start1":567,"start2":567,"length1":16,"length2":18},{"diffs":[[0,"  \n};\n\n\n"],[1,"var c = new Castle();\nc.init();\n\n// usernames which are currently connected to the chat\nvar usernames = {};\nio.sockets.on('connection', function(socket) {\n   // when the client emits 'adduser', this listens and executes\n   socket.on('viewCastle', function() {\n      \n      // update the list of users in chat, client-side\n      io.sockets.emit('viewCastle', c.view());\n\n   });\n\n});\n\n\n"]],"start1":1078,"start2":1078,"length1":8,"length2":392}]],"length":1470,"saved":false}
{"ts":1360812692767,"patch":[[{"diffs":[[0,"hat\n"],[-1,"var usernames = {};"],[0,"\nio."]],"start1":1170,"start2":1170,"length1":27,"length2":8}]],"length":1451,"saved":false}
